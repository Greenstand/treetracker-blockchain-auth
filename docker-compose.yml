version: '3.8'

services:
  backend-bridge:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - KEYCLOAK_REALM_URL=http://keycloak:8080/realms/fabric-bridge
      - KEYCLOAK_CLIENT_ID=backend-bridge
      - KEYCLOAK_CLIENT_SECRET=your-client-secret
      - KEYCLOAK_JWKS_URI=http://keycloak:8080/realms/fabric-bridge/protocol/openid_connect/certs
      - FABRIC_CA_URL=https://fabric-ca:7054
      - FABRIC_CA_NAME=ca-org1
      - FABRIC_CA_ADMIN_USER=admin
      - FABRIC_CA_ADMIN_PASSWORD=adminpw
      - FABRIC_NETWORK_CONFIG_PATH=./crypto-config/connection-org1.json
      - FABRIC_WALLET_PATH=./wallet
      - FABRIC_MSP_ID=Org1MSP
      - JWT_SECRET=your-super-secret-jwt-key-here
      - ENCRYPTION_KEY=your-32-character-encryption-key
      - LOG_LEVEL=info
    volumes:
      - ./wallet:/app/wallet
      - ./logs:/app/logs
      - ./crypto-config:/app/crypto-config
    depends_on:
      - keycloak
      - fabric-ca
    networks:
      - bridge-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=h2
    ports:
      - "8080:8080"
    networks:
      - bridge-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 5

  fabric-ca:
    image: hyperledger/fabric-ca:1.5.5
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-org1
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_PORT=7054
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./crypto-config/ca:/etc/hyperledger/fabric-ca-server
    networks:
      - bridge-network
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:7054/cainfo"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Optional: Database for additional data storage
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=backend_bridge
      - POSTGRES_USER=bridge_user
      - POSTGRES_PASSWORD=bridge_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - bridge-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bridge_user -d backend_bridge"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  bridge-network:
    driver: bridge

volumes:
  postgres_data:
